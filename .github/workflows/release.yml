
# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "master" branch
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]
on:
  push:
    branches: [ "master" ]
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Create the release files
        run: find * -maxdepth 0 -type d -exec tar -czf "{}".tar.gz "{}" \;

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "1.tar.gz"
          # body_path: ${{ github.workspace }}-CHANGELOG.txt
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.GITHUB_TOKEN }}



#       - name: Release
#         uses: elgohr/Github-Release-Action@v4
#         id: create_release
#         with:
#           title: ${{ github.ref }}
#           # draft: false
#           # prerelease: false
#           # release_name: ${{ steps.version.outputs.version }}
#           # tag_name: ${{ github.ref }}
#           # body_path: CHANGELOG.md
#         env:
#           GITHUB_TOKEN: ${{ github.token }}


#       - name: Upload artifacts
#         uses: actions/upload-artifacts@v3
#         with:
#           path: *.tar.gz
#           if-no-files-found: error
